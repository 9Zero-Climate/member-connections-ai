name: Tests

on:
  push:
    branches: [production, staging]
  pull_request:
    branches: [production, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      DB_URL: postgresql://test:test@localhost:5432/testdb
      OFFICERND_CLIENT_ID: "not_a_real_id"
      OFFICERND_CLIENT_SECRET: "not_a_real_secret"
      OFFICERND_ORG_SLUG: "not_a_real_slug"
      PROXYCURL_API_KEY: "test-key"
      SLACK_BOT_TOKEN: "not_a_real_bot_token"
      SLACK_APP_TOKEN: "not_a_real_app_token"
      OPENAI_API_KEY: "not_a_real_openai_api_key"
      OPENROUTER_API_KEY: "not_a_real_openrouter_api_key"
      NOTION_API_KEY: "not_a_real_notion_api_key"
      NOTION_MEMBERS_DATABASE_ID: "not_a_real_notion_members_database_id"

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4
          run_install: false # Wait for node setup before running install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        run: pnpm typecheck

      - name: Run tests (unit)
        run: pnpm test:unit

      - name: Run tests (integration)
        run: pnpm test:integration

      - name: Run linting
        run: pnpm lint
